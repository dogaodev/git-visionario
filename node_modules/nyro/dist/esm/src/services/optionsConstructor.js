"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Options {
    options = {};
    constructor(options) {
    }
    toJSON() {
        return this.options;
    }
    ;
    set(key, value) {
        if (!this.options[key]) {
            this.options[key] = value;
        }
        return this;
    }
    get(key) {
        return this.options[key];
    }
    delete(key) {
        delete this.options[key];
        return this;
    }
    all() {
        return this.options;
    }
    clear() {
        this.options = {};
        return this;
    }
    has(key) {
        return this.options.hasOwnProperty(key);
    }
    setFromObject(options) {
        this.options = { ...this.options, ...options };
        return this;
    }
    setFromOptions(options) {
        this.setFromObject(options.all());
        return this;
    }
    setURL(url) {
        return this.set('url', url);
    }
    setBaseURL(baseURL) {
        return this.set('baseURL', baseURL);
    }
    setPath(path) {
        return this.set('path', path);
    }
    setBodySchema(bodySchema) {
        return this.set('bodySchema', bodySchema);
    }
    setAuth(auth) {
        return this.set('auth', auth);
    }
    setProxy(proxy) {
        return this.set('proxy', proxy);
    }
    setMethod(method) {
        return this.set('method', method);
    }
    setHeaders(headers) {
        if (typeof headers !== 'object')
            return this;
        return this.set('headers', headers);
    }
    setBody(body) {
        return this.set('body', body);
    }
    setQuery(query) {
        return this.set('query', query);
    }
    setParams(params) {
        return this.set('params', params);
    }
    setResponseEncoding(responseEncoding) {
        return this.set('responseEncoding', responseEncoding);
    }
    setResponseType(responseType) {
        return this.set('responseType', responseType);
    }
    setMaxRedirects(maxRedirects) {
        return this.set('maxRedirects', maxRedirects);
    }
    setRetryDelay(retryDelay) {
        return this.set('retryDelay', retryDelay);
    }
    setTimeout(timeout) {
        return this.set('timeout', timeout);
    }
}
exports.default = Options;
