"use strict";
/**
 * @fileoverview Entry point for the requester module.
 *
 * This file imports the main engine from the services directory and exports it as the default export.
 * Additionally, it re-exports all types from the helpers/types module.
 *
 * @module requester
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseType = exports.ResponseEncoding = exports.Method = exports.StatusCode = exports.ContentType = exports.Plugin = exports.getRandomVersion = exports.generateSafari = exports.generateFirefox = exports.generateEdge = exports.generateChrome = exports.generateAndroid = exports.SafariVersions = exports.ChromeVersions = exports.AndroidVersions = exports.UserAgent = exports.Proxy = exports.isNyroError = exports.NyroError = exports.version = exports.Headers = exports.Options = exports.trace = exports.connect = exports.options = exports.head = exports.delete = exports.patch = exports.put = exports.post = exports.get = exports.extend = exports.request = exports.Nyro = void 0;
const engine_1 = __importDefault(require("./services/engine"));
const headersConstructor_1 = __importDefault(require("./services/headersConstructor"));
exports.Headers = headersConstructor_1.default;
const optionsConstructor_1 = __importDefault(require("./services/optionsConstructor"));
exports.Options = optionsConstructor_1.default;
const errorHandler_1 = __importStar(require("./helpers/errorHandler"));
exports.NyroError = errorHandler_1.default;
Object.defineProperty(exports, "isNyroError", { enumerable: true, get: function () { return errorHandler_1.isNyroError; } });
const checkVersion_1 = __importDefault(require("./helpers/checkVersion"));
const proxyManager_1 = __importDefault(require("./services/proxyManager"));
exports.Proxy = proxyManager_1.default;
const userAgentConstuctor_1 = __importStar(require("./services/userAgentConstuctor"));
exports.UserAgent = userAgentConstuctor_1.default;
Object.defineProperty(exports, "AndroidVersions", { enumerable: true, get: function () { return userAgentConstuctor_1.AndroidVersions; } });
Object.defineProperty(exports, "ChromeVersions", { enumerable: true, get: function () { return userAgentConstuctor_1.ChromeVersions; } });
Object.defineProperty(exports, "SafariVersions", { enumerable: true, get: function () { return userAgentConstuctor_1.SafariVersions; } });
Object.defineProperty(exports, "generateAndroid", { enumerable: true, get: function () { return userAgentConstuctor_1.generateAndroid; } });
Object.defineProperty(exports, "generateChrome", { enumerable: true, get: function () { return userAgentConstuctor_1.generateChrome; } });
Object.defineProperty(exports, "generateEdge", { enumerable: true, get: function () { return userAgentConstuctor_1.generateEdge; } });
Object.defineProperty(exports, "generateFirefox", { enumerable: true, get: function () { return userAgentConstuctor_1.generateFirefox; } });
Object.defineProperty(exports, "generateSafari", { enumerable: true, get: function () { return userAgentConstuctor_1.generateSafari; } });
Object.defineProperty(exports, "getRandomVersion", { enumerable: true, get: function () { return userAgentConstuctor_1.getRandomVersion; } });
const pluginManager_1 = __importDefault(require("./services/pluginManager"));
exports.Plugin = pluginManager_1.default;
var Nyro = new engine_1.default();
exports.Nyro = Nyro;
const { version, pkg } = engine_1.default;
exports.version = version;
const { get, patch, post, put, delete: _delete, head, options, connect, trace, extend, create, request, download, queue, pagination, use, on, off, emit, once, eventNames, removeListener, removeAllListeners, listenerCount, listeners, addListener, getMaxListeners, rawListeners, setMaxListeners, prependListener, prependOnceListener } = Nyro;
exports.get = get;
exports.patch = patch;
exports.post = post;
exports.put = put;
exports.delete = _delete;
exports.head = head;
exports.options = options;
exports.connect = connect;
exports.trace = trace;
exports.extend = extend;
exports.request = request;
/**
* @description The main Nyro function.
*
* This function is the main entry point for the Nyro module. It is a wrapper around the request function and can be used to make HTTP requests.
* @async
* @function nyro
* @param {OptionsInterface} options - The options for the request.
* @returns {Promise<ResponseInterface>} A promise that resolves to the response object.
* @example nyro({ url: 'https://jsonplaceholder.typicode.com/posts/1', method: 'GET' }).then(console.log);
* @example nyro.get('https://jsonplaceholder.typicode.com/posts/1').then(res => res.json()).then(console.log);
* @example nyro.post('https://jsonplaceholder.typicode.com/posts', { body: { title: 'foo', body: 'bar', userId: 1 } }).then(console.log);
*/
const nyro = Object.assign(async (options) => {
    return Nyro.request({ ...Nyro.baseRequestOptions, ...options });
}, Nyro);
/* Nyro Method Functions */
nyro.get = get;
nyro.post = post;
nyro.put = put;
nyro.patch = patch;
nyro.delete = _delete;
nyro.head = head;
nyro.options = options;
nyro.connect = connect;
nyro.trace = trace;
nyro.extend = extend;
nyro.request = request;
nyro.create = create;
nyro.download = download;
nyro.queue = queue;
nyro.pagination = pagination;
nyro.use = use;
/* Nyro Events */
nyro.on = on;
nyro.off = off;
nyro.once = once;
nyro.emit = emit;
nyro.eventNames = eventNames;
nyro.removeListener = removeListener;
nyro.removeAllListeners = removeAllListeners;
nyro.listenerCount = listenerCount;
nyro.listeners = listeners;
nyro.addListener = addListener;
nyro.getMaxListeners = getMaxListeners;
nyro.rawListeners = rawListeners;
nyro.setMaxListeners = setMaxListeners;
nyro.prependListener = prependListener;
nyro.prependOnceListener = prependOnceListener;
engine_1.default.version = version;
engine_1.default.pkg = pkg;
/**
 * @description Check for updates to the Nyro package.
 *
 * @param {NyroClass} nyro - The Nyro instance to check for updates.
 * @param {string} version - The current version of the Nyro package.
 * @param {boolean} checkUpdates - Whether or not to check for updates.
 */
(0, checkVersion_1.default)(nyro, version, true);
exports.default = nyro;
const types_1 = require("./helpers/types");
Object.defineProperty(exports, "ContentType", { enumerable: true, get: function () { return types_1.ContentType; } });
Object.defineProperty(exports, "StatusCode", { enumerable: true, get: function () { return types_1.StatusCode; } });
Object.defineProperty(exports, "Method", { enumerable: true, get: function () { return types_1.Method; } });
Object.defineProperty(exports, "ResponseEncoding", { enumerable: true, get: function () { return types_1.ResponseEncoding; } });
Object.defineProperty(exports, "ResponseType", { enumerable: true, get: function () { return types_1.ResponseType; } });
